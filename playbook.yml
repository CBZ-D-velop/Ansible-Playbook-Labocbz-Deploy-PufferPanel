---
- name: "Deploy Docker and PufferPanel"
  hosts: "{{ tower_env | default([]) }}"
  gather_facts: true
  become: true
  become_method: sudo
  become_user: root

  tasks:

    - name: "Install Docker"
      when: inv_install_docker | default(false)
      block:
        - name: "Include labocbz.prepare_host"
          tags:
            - "labocbz.prepare_host"
          ansible.builtin.include_role:
            name: "labocbz.prepare_host"

        - name: "Include labocbz.add_certificates"
          tags:
            - "labocbz.add_certificates"
          loop: "{{ inv_deploy_docker_cert_bundles }}"
          loop_control:
            loop_var: bundle
          when: inv_deploy_docker_cert_bundles is defined
          vars:
            add_certificates_bundle_name: "{{ bundle.name }}"
            add_certificates_bundle_type: "{{ bundle.type }}"
            add_certificates_bundle_src: "{{ bundle.src }}"
            add_certificates_bundle_dest: "{{ bundle.dest }}"
            add_certificates_bundle_src_user: "{{ bundle.src_user }}"
            add_certificates_bundle_src_password: "{{ bundle.src_password }}"
            add_certificates_bundle_dest_user: "{{ bundle.dest_user }}"
            add_certificates_bundle_dest_group: "{{ bundle.dest_group }}"
            add_certificates_bundle_dest_mode: "{{ bundle.dest_mode }}"
          ansible.builtin.include_role:
            name: "labocbz.add_certificates"

        - name: "Include labocbz.install_docker"
          tags:
            - "labocbz.install_docker"
          vars:
            install_docker_portainer: "{{ inv_install_docker_portainer }}"
            install_docker_portainer_http_port: "{{ inv_install_docker_portainer_http_port }}"
            install_docker_portainer_https_port: "{{ inv_install_docker_portainer_https_port }}"
            install_docker_portainer_agent_port: "{{ inv_install_docker_portainer_agent_port }}"
            install_docker_portainer_container_name: "{{ inv_install_docker_portainer_container_name }}"
            install_docker_portainer_volume_name: "{{ inv_install_docker_portainer_volume_name }}"
            install_docker_portainer_ssl: "{{ inv_install_docker_portainer_ssl }}"
            install_docker_portainer_ssl_volume_name: "{{ inv_install_docker_portainer_ssl_volume_name }}"
            install_docker_portainer_ssl_key: "{{ inv_install_docker_portainer_ssl_cert }}"
            install_docker_watchtower: "{{ inv_install_docker_watchtower }}"
            install_docker_watchtower_poll_interval: "{{ inv_install_docker_watchtower_poll_interval }}"
            install_docker_watchtower_cleanup: "{{ inv_install_docker_watchtower_cleanup }}"
            install_docker_watchtower_include_restarting: "{{ inv_install_docker_watchtower_include_restarting }}"
            install_docker_watchtower_include_stopped: "{{ inv_install_docker_watchtower_include_stopped }}"
            install_docker_watchtower_no_restart: "{{ inv_install_docker_watchtower_no_restart }}"
            install_docker_portainer_address: "{{ inv_install_docker_portainer_address }}"
            install_docker_handle_clean: "{{ inv_install_docker_handle_clean }}"
            install_docker_clean_cron_file: "{{ inv_install_docker_clean_cron_file }}"
            install_docker_clean_weekday: "{{ inv_install_docker_clean_weekday }}"
            install_docker_clean_minute: "{{ inv_install_docker_clean_minute }}"
            install_docker_clean_hour: "{{ inv_install_docker_clean_hour }}"
            install_docker_insecure_registries: "{{ inv_install_docker_insecure_registries }}"
          ansible.builtin.include_role:
            name: "labocbz.install_docker"

    - name: "Install PufferPanel"
      when: inv_install_pufferpanel | default(false)
      block:
        - name: "Include labocbz.install_pufferpanel"
          tags:
            - "labocbz.install_pufferpanel"
          vars:
            install_pufferpanel_container_name: "{{ inv_install_pufferpanel_container_name }}"
            install_pufferpanel_data_path: "{{ inv_install_pufferpanel_data_path }}"
            install_pufferpanel_web_address: "{{ inv_install_pufferpanel_web_address }}"
            install_pufferpanel_web_port: "{{ inv_install_pufferpanel_web_port }}"
            install_pufferpanel_sftp_address: "{{ inv_install_pufferpanel_sftp_address }}"
            install_pufferpanel_sftp_port: "{{ inv_install_pufferpanel_sftp_port }}"
            install_pufferpanel_config_path: "{{ inv_install_pufferpanel_config_path }}"
          ansible.builtin.include_role:
            name: "labocbz.install_pufferpanel"

    - name: "Install Apache2"
      when: inv_install_apache | default(false)
      block:
        - name: "Include labocbz.prepare_host"
          tags:
            - "labocbz.prepare_host"
          vars:
            prepare_host_system_users: "{{ inv_prepare_host_apache_system_users }}"
          ansible.builtin.include_role:
            name: "labocbz.prepare_host"

        - name: "Include labocbz.add_certificates"
          tags:
            - "labocbz.add_certificates"
          loop: "{{ inv_add_apache_confs_configurations_cert_bundles }}"
          loop_control:
            loop_var: bundle
          when: inv_add_apache_confs_configurations_cert_bundles is defined
          vars:
            add_certificates_bundle_name: "{{ bundle.name }}"
            add_certificates_bundle_type: "{{ bundle.type }}"
            add_certificates_bundle_src: "{{ bundle.src }}"
            add_certificates_bundle_dest: "{{ bundle.dest }}"
            add_certificates_bundle_src_user: "{{ bundle.src_user }}"
            add_certificates_bundle_src_password: "{{ bundle.src_password }}"
            add_certificates_bundle_dest_user: "{{ bundle.dest_user }}"
            add_certificates_bundle_dest_group: "{{ bundle.dest_group }}"
            add_certificates_bundle_dest_mode: "{{ bundle.dest_mode }}"
          ansible.builtin.include_role:
            name: "labocbz.add_certificates"

        - name: "Include labocbz.install_apache"
          tags:
            - "labocbz.install_apache"
          vars:
            install_apache_https_listen_port: "{{ inv_install_apache_https_listen_port }}"
            install_apache_http_listen_port: "{{ inv_install_apache_http_listen_port }}"
            install_apache_modules: "{{ inv_install_apache_modules }}"
            install_apache_enable_qos: "{{ inv_install_apache_enable_qos }}"
            install_apache_enable_security: "{{ inv_install_apache_enable_security }}"
            install_apache_security_core_version: "{{ inv_install_apache_security_core_version }}"
            install_apache_remove_all_vhosts: "{{ inv_install_apache_remove_all_vhosts }}"
            install_apache_loglevel: "{{ inv_install_apache_loglevel }}"
            install_apache_security_version: "{{ inv_install_apache_security_version }}"
            install_apache_enable_evasive: "{{ inv_install_apache_enable_evasive }}"
            install_apache_enable_pagespeed: "{{ inv_install_apache_enable_pagespeed }}"
            install_apache_enable_prefork: "{{ inv_install_apache_enable_prefork }}"
          ansible.builtin.include_role:
            name: "labocbz.install_apache"

        - name: "Include labocbz.add_apache_confs"
          tags:
            - "labocbz.add_apache_confs"
          vars:
            add_apache_confs_http_listen_port: "{{ inv_add_apache_confs_http_listen_port }}"
            add_apache_confs_https_listen_port: "{{ inv_add_apache_confs_https_listen_port }}"
            add_apache_confs_ldap_url: "{{ inv_add_apache_confs_ldap_url }}"
            add_apache_confs_ldap_port: "{{ inv_add_apache_confs_ldap_port }}"
            add_apache_confs_ldap_dc: "{{ inv_add_apache_confs_ldap_dc }}"
            add_apache_confs_auth_ldap_url: "{{ inv_add_apache_confs_auth_ldap_url }}"
            add_apache_confs_custom_ldap_base_header: "{{ inv_add_apache_confs_custom_ldap_base_header }}"
            add_apache_confs_webmaster: "{{ inv_add_apache_confs_webmaster }}"
            add_apache_confs_request_body: "{{ inv_add_apache_confs_request_body }}"
            add_apache_confs_security_body_limit: "{{ inv_add_apache_confs_security_body_limit }}"
            add_apache_confs_ssl_files_path: "{{ inv_add_apache_confs_ssl_files_path }}"
            add_apache_confs_conf_path: "{{ inv_add_apache_confs_conf_path }}"
            add_apache_confs_base_document_root: "{{ inv_add_apache_confs_base_document_root }}"
            add_apache_confs_configurations: "{{ inv_add_apache_confs_configurations }}"
          ansible.builtin.include_role:
            name: "labocbz.add_apache_confs"

        - name: "Include labocbz.add_logrotate_confs"
          tags:
            - "labocbz.add_logrotate_confs"
          vars:
            logrotate_configurations: "{{ inv_logrotate_apache_configurations }}"
          ansible.builtin.include_role:
            name: "labocbz.add_logrotate_confs"

        - name: "Block all trafic from other hosts on port PufferPanel HTTP (disable acces to Portainer without Apache2)"
          ansible.builtin.iptables:
            chain: "INPUT"
            protocol: "tcp"
            destination_port: "{{ inv_install_pufferpanel_web_port }}"
            jump: "DROP"
            source: "! 127.0.0.1"
            comment: "Force external user to use Apache2"
